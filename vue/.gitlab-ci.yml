stages: 
  - compile
  - build
  - deploy

compile-node:
  stage: compile
  image: node:gallium-alpine
  script:
    - npm install --legacy-peer-deps
    - npm run build
  artifacts:
    paths:
      - dist
    expire_in: 1 day
  only:
    - e-ktp-app-frontend
  tags:
    - rayon-cicd

build-docker-image:
  stage: build
  image: registry.blubox.id/infrastructure/service-images:docker-stable
  services:
    - name: registry.blubox.id/infrastructure/service-images:docker-dind
      alias: docker
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "$CI_COMMIT_SHORT_SHA" > version.txt
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
    - cp sekrip/Dockerfile Dockerfile
    - docker build -t $CI_REGISTRY_IMAGE/e-ktp-app-frontend:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/e-ktp-app-frontend:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE/e-ktp-app-frontend:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/e-ktp-app-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/e-ktp-app-frontend:latest
  only:
    - e-ktp-app-frontend
  tags:
    - rayon-cicd

deploy-app:
  stage: deploy
  image: registry.blubox.id/infrastructure/service-images:docker-compose
  variables:
    application_name: frontend
    project_name: e-ktp-app
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
    - sed -i "s/$project_name-$application_name:latest/$project_name-$application_name:$CI_COMMIT_SHORT_SHA/g" "sekrip/docker-compose.yml"
    - cp sekrip/docker-compose.yml /root/docker/$project_name/$application_name
    - docker-compose -f /root/docker/$project_name/$application_name/docker-compose.yml up -d
  only:
    - e-ktp-app-frontend
  tags:
    - rayon-cicd